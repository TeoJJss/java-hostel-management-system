/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.assg;

import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class T_PaymentandFeedbacks extends javax.swing.JFrame {

    private String username;
    private String dnt;
    private String desc;
    private String custName;
    private String roomNum;
    private String custID;
    private DefaultTableModel table;
    private String[][] waitingAppointmentList;
    /**
     * Creates new form T_PaymentandFeedbacks
     */
    public T_PaymentandFeedbacks(String username) {
        setTitle("Add Service Record - Technician");
        initComponents();
        this.username = username;
        setTable();
        displayAppointments();
        apptIDField.setEditable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        chooseTable = new javax.swing.JTable();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        apptIDField = new javax.swing.JTextField();
        paymentField = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        feedbackField = new javax.swing.JTextArea();
        saveButton = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        chooseTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null}

            },
            new String [] {
                "Appointment ID", "Customer ID", "Description", "Date and Time","Customer Name","Room Number"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        chooseTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                chooseTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(chooseTable);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setText("Add Service Record");

        jLabel2.setText("Appointment ID");

        jLabel3.setText("Feedback");

        jLabel4.setText("Payment (RM)");

        apptIDField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                apptIDFieldActionPerformed(evt);
            }
        });

        feedbackField.setColumns(20);
        feedbackField.setLineWrap(true);
        feedbackField.setRows(5);
        feedbackField.setWrapStyleWord(true);
        jScrollPane2.setViewportView(feedbackField);

        saveButton.setText("Done");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        jButton2.setText("Back");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel5.setText("Select an appointment to add feedback and payment.");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(152, 152, 152)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addGap(59, 59, 59)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(apptIDField, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(paymentField, javax.swing.GroupLayout.PREFERRED_SIZE, 311, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 499, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel1)
                    .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 509, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addGap(6, 6, 6)
                            .addComponent(jButton2)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(saveButton))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 807, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(58, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(apptIDField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(paymentField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(saveButton))
                .addGap(24, 24, 24))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void setTable(){
        table = (DefaultTableModel)chooseTable.getModel();
    }
    private void displayAppointments(){
        Service service = new Service(username);
        waitingAppointmentList = service.getPendingServiceList();
        table.setRowCount(0);
        
        for (String[] appointment : waitingAppointmentList){
            if (appointment[0] != null){
                table.addRow(appointment);
            };
        };
        

    };
    
    private void apptIDFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_apptIDFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_apptIDFieldActionPerformed

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        // TODO add your handling code here:
    
        try{
            String apID = apptIDField.getText().replace(",", "");
            String fb = feedbackField.getText().replace(",", "");
            double pay = Double.parseDouble(paymentField.getText());
        
            if(apID.equals("")){
                JOptionPane.showMessageDialog(this, "Select an appointment to log service", "Error", JOptionPane.ERROR_MESSAGE);
            }
        
            Service service = new Service(username);
            service.addServiceRecord(apID,fb,pay);
            JOptionPane.showMessageDialog(this,"Saved!");
            String[] receiptInfo = service.getReceiptInfo();
            int choice = JOptionPane.showConfirmDialog(this, "Would you like to print receipt?");
            if (choice == JOptionPane.YES_OPTION) {
                T_PrintReceipt print = new T_PrintReceipt(this.username, receiptInfo);
                print.setVisible(true);
                dispose();
            }else{
                T_home home = new T_home(username);
                home.setVisible(true);
                dispose();
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Please enter a valid payment amount.", "Error", JOptionPane.ERROR_MESSAGE);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "An error occurred while saving the service record.", "Error", JOptionPane.ERROR_MESSAGE);
            Logger.getLogger(T_PaymentandFeedbacks.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_saveButtonActionPerformed

    private void chooseTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_chooseTableMouseClicked
        // TODO add your handling code here:
    try{
        int selectedRowIndex = chooseTable.getSelectedRow();
        String[] selection = waitingAppointmentList[selectedRowIndex];
        
    if (selection != null && selection.length >= 6) { // Check if selection is not null and has enough elements

        String APIDselected = selection[0];
        custID = selection[1];
        desc = selection[2];
        dnt = selection[3];
        custName = selection[4];
        roomNum = selection[5];
        
        if (selectedRowIndex != -1){
            apptIDField.setText(APIDselected);
            //System.out.println(custID + desc + dnt + custName + roomNum);
        }else if (APIDselected == null || APIDselected.equals("")) {
            JOptionPane.showMessageDialog(this,"Please select an appointment");
        }
    }else{
        System.out.println("All fields are not filled");
    }
    }catch(ArrayIndexOutOfBoundsException e){
            JOptionPane.showMessageDialog(this,"Please select an appointment");
    }
    
    }//GEN-LAST:event_chooseTableMouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        T_home home = new T_home(username);
        home.setVisible(true);
        dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField apptIDField;
    private javax.swing.JTable chooseTable;
    private javax.swing.JTextArea feedbackField;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTextField paymentField;
    private javax.swing.JButton saveButton;
    // End of variables declaration//GEN-END:variables
}
